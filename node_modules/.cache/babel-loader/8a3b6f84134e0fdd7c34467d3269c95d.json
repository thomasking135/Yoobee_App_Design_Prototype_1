{"remainingRequest":"C:\\Test-App\\node_modules\\babel-loader\\lib\\index.js!C:\\Test-App\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Test-App\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Test-App\\src\\components\\EventTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Test-App\\src\\components\\EventTable.vue","mtime":1660205737140},{"path":"C:\\Test-App\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660021295936},{"path":"C:\\Test-App\\node_modules\\babel-loader\\lib\\index.js","mtime":1660021296495},{"path":"C:\\Test-App\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660021295936},{"path":"C:\\Test-App\\node_modules\\vue-loader\\lib\\index.js","mtime":1660021301600}],"contextDependencies":[],"result":["export default {\n  name: 'event-table',\n  props: {\n    events: Array\n  },\n\n  data() {\n    return {\n      editing: null\n    };\n  },\n\n  methods: {\n    editMode(id) {\n      this.editing = id;\n    },\n\n    editEvent(event) {\n      if (event.name === '' || event.body === '') return;\n      this.$emit('edit:event', event.id, event);\n      this.editing = null;\n    }\n\n  }\n};",{"version":3,"mappings":"AAsDA;EACAA,mBADA;EAEAC;IACAC;EADA,CAFA;;EAKAC;IACA;MACAC;IADA;EAGA,CATA;;EAUAC;IACAC;MACA;IACA,CAHA;;IAKAC;MACA;MACA;MACA;IACA;;EATA;AAVA","names":["name","props","events","data","editing","methods","editMode","editEvent"],"sourceRoot":"src/components","sources":["EventTable.vue"],"sourcesContent":["<template>\n  <div id=\"event-table\" class=\"small-container\">\n    <p\n      v-if=\"events.length < 1\"\n      class=\"empty-table\"\n    >\n      No events\n    </p>\n    <table v-else>\n      <thead>\n        <tr>\n          <th>Event</th>\n          <th>Description</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr\n          :key=\"event.id\"\n          v-for=\"event in events\"\n        >\n          <td v-if=\"editing === event.id\">\n            <input\n              type=\"text\"\n              v-model=\"event.name\"\n            >\n          </td>\n          <td v-else>{{event.name}}</td>\n          <td v-if=\"editing === event.id\">\n            <input\n              type=\"text\"\n              v-model=\"event.body\"\n            >\n          </td>\n          <td v-else>{{event.body}}</td>\n          <td v-if=\"editing === event.id\">\n            \n            <button\n              class=\"muted-button\"\n              @click=\"editing = null\"\n            >DONE</button>\n          </td>\n          <td v-else>\n            <button class=\"white\" @click=\"editMode(event.id)\">EDIT</button>\n            <button class=\"red\" @click=\"$emit('delete:event', event.id)\">DELETE</button>\n          </td>\n\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'event-table',\n  props: {\n    events: Array,\n  },\n  data() {\n    return {\n      editing: null,\n    }\n  },\n  methods: {\n    editMode(id) {\n      this.editing = id\n    },\n\n    editEvent(event) {\n      if (event.name === '' || event.body === '') return\n      this.$emit('edit:event', event.id, event)\n      this.editing = null\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n\n.red {\n  background-color: red; \n  width: 100px; height: 50px;\n}\n\n.green {\n  background-color: white;\n  color: black;\n  width: 100px; height: 50px;\n}\n\n.muted-button{\n  background-color: rgb(137, 162, 137); \n  width: 100px; height: 50px;\n}\n  .red {\n  background-color: red; \n  width: 100px; height: 50px;\n}\n\n.white {\n  background-color: green;\n  width: 100px; height: 50px;\n}\n\ninput {\n  margin: 0;\n}\n\n.empty-table {\n  text-align: center;\n}\n</style>\n"]}]}