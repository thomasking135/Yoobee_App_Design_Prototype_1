{"remainingRequest":"C:\\Test-App\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Test-App\\node_modules\\babel-loader\\lib\\index.js!C:\\Test-App\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Test-App\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Test-App\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Test-App\\src\\App.vue","mtime":1660436329360},{"path":"C:\\Test-App\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660021295936},{"path":"C:\\Test-App\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1660021290127},{"path":"C:\\Test-App\\node_modules\\babel-loader\\lib\\index.js","mtime":1660021296495},{"path":"C:\\Test-App\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660021295936},{"path":"C:\\Test-App\\node_modules\\vue-loader\\lib\\index.js","mtime":1660021301600}],"contextDependencies":[],"result":["import EventTable from \"@/components/EventTable.vue\";\nimport EventForm from \"@/components/EventForm.vue\";\nexport default {\n  name: \"app\",\n  components: {\n    EventTable,\n    EventForm\n  },\n\n  data() {\n    return {\n      events: []\n    };\n  },\n\n  mounted() {\n    this.getEvents();\n  },\n\n  methods: {\n    async getEvents() {\n      try {\n        const response = await fetch(\"https://jsonplaceholder.typicode.com/comments\");\n        const data = await response.json();\n        this.events = data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async addEvent(event) {\n      try {\n        const response = await fetch(\"https://jsonplaceholder.typicode.com/comments\", {\n          method: \"POST\",\n          body: JSON.stringify(event),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n          }\n        });\n        const data = await response.json();\n        this.events = [...this.events, data];\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async editEvent(id, updatedEvent) {\n      try {\n        const response = await fetch(`https://jsonplaceholder.typicode.com/comments/${id}`, {\n          method: \"PUT\",\n          body: JSON.stringify(updatedEvent),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n          }\n        });\n        const data = await response.json();\n        this.events = this.events.map(event => event.id === id ? data : event);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async deleteEvent(id) {\n      try {\n        await fetch(`https://jsonplaceholder.typicode.com/comments/${id}`, {\n          method: \"DELETE\"\n        });\n        this.events = this.events.filter(event => event.id !== id);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n  }\n};",{"version":3,"mappings":"AA+BA;AACA;AAIA;EACAA,WADA;EAEAC;IACAC,UADA;IAEAC;EAFA,CAFA;;EAOAC;IACA;MACAC;IADA;EAGA,CAXA;;EAaAC;IACA;EACA,CAfA;;EAiBAC;IACA;MACA;QACA,6BACA,+CADA;QAGA;QACA;MACA,CANA,CAMA;QACAC;MACA;IACA,CAXA;;IAaA;MACA;QACA,6BACA,+CADA,EAEA;UACAC,cADA;UAEAC,2BAFA;UAGAC;YAAA;UAAA;QAHA,CAFA;QAQA;QACA;MACA,CAXA,CAWA;QACAH;MACA;IACA,CA5BA;;IA8BA;MACA;QACA,6BACA,qDADA,EAEA;UACAC,aADA;UAEAC,kCAFA;UAGAC;YAAA;UAAA;QAHA,CAFA;QAQA;QACA,uCACAC,8BADA;MAGA,CAbA,CAaA;QACAJ;MACA;IACA,CA/CA;;IAiDA;MACA;QACA;UACAC;QADA;QAGA;MACA,CALA,CAKA;QACAD;MACA;IACA;;EA1DA;AAjBA","names":["name","components","EventTable","EventForm","data","events","mounted","methods","console","method","body","headers","event"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["/* eslint-disable */\n<template>\n  <div id=\"app\" class=\"small-container\">\n    <a href=\"#app\"><img src=\"./assets/logo.png\" alt=\"logo\"/></a>\n    \n    <ul class=\"text-align\">\n      <a href=\"#about\">ABOUT</a>&emsp;\n      <a href=\"#register-login\">REGISTER/LOGIN</a>&emsp;\n      <a href=\"#logoff\">LOGOFF</a>\n\n      \n  </ul>\n    <hr>\n    <h1>Welcome</h1>\n    <event-form @add:event=\"addEvent\"/>\n    <event-table\n      :events=\"events\"\n      @delete:event=\"deleteEvent\"\n      @edit:event=\"editEvent\"\n    />\n    \n   \n   \n   \n    \n    \n  </div>\n</template>\n\n<script>\n\nimport EventTable from \"@/components/EventTable.vue\";\nimport EventForm from \"@/components/EventForm.vue\";\n\n\n\nexport default {\n  name: \"app\",\n  components: {\n    EventTable,\n    EventForm\n \n},\n  data() {\n    return {\n      events: []\n    };\n  },\n\n  mounted() {\n    this.getEvents();\n  },\n\n  methods: {\n    async getEvents() {\n      try {\n        const response = await fetch(\n          \"https://jsonplaceholder.typicode.com/comments\"\n        );\n        const data = await response.json();\n        this.events = data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async addEvent(event) {\n      try {\n        const response = await fetch(\n          \"https://jsonplaceholder.typicode.com/comments\",\n          {\n            method: \"POST\",\n            body: JSON.stringify(event),\n            headers: { \"Content-type\": \"application/json; charset=UTF-8\" }\n          }\n        );\n        const data = await response.json();\n        this.events = [...this.events, data];\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async editEvent(id, updatedEvent) {\n      try {\n        const response = await fetch(\n          `https://jsonplaceholder.typicode.com/comments/${id}`,\n          {\n            method: \"PUT\",\n            body: JSON.stringify(updatedEvent),\n            headers: { \"Content-type\": \"application/json; charset=UTF-8\" }\n          }\n        );\n        const data = await response.json();\n        this.events = this.events.map(event =>\n          event.id === id ? data : event\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async deleteEvent(id) {\n      try {\n        await fetch(`https://jsonplaceholder.typicode.com/comments/${id}`, {\n          method: \"DELETE\"\n        });\n        this.events = this.events.filter(event => event.id !== id);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};\n</script>\n\n<style>\nbutton {\n  background: #009435;\n  border: 1px solid #009435;\n}\n\nbutton:hover,\nbutton:active,\nbutton:focus {\n  background: #32a95d;\n  border: 1px solid #32a95d;\n}\n\n.small-container {\n  max-width: 680px;\n}\n\nh1 {\n  text-align: center;\n}\n\n.text-align{\n  font-weight: bold;\n  font-size: 25px;\n  text-align: center;\n}\n</style>\n"]}]}